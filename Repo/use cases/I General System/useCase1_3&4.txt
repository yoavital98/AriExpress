title 1.3 & 1.4: request to payment & supply 

actor Guest
participant Service
participant StoreFacade

note over Guest: Guest wants to purchase an item. \nFor this to happen he needs to communicate with Supply and Purchase services
Guest->Service:logInAsGuest()
Service->Guest:res
Guest->Service:addToBasket(guest_id, "Feliks&Sons", 1, 5)

Service->Guest:res_added_product
Guest->Service:purchaseCart("0", "4580020345672134", "12/26", "Amiel Saad", "555", "123456789","be'er sheva", "beer sheva", "israel", "1234152")
Service->StoreFacade: purchaseCart(user_name, card_number, card_date, card_user_full_name, ccv, card_holder_id, address, city, country, zipcode)
StoreFacade->StoreFacade: user = self.getUserOrMember(user_name)
StoreFacade->User: cart = user.getCart()
StoreFacade->Cart: cart.PurchaseCart()
Cart->PaymentService: preformHandshake()
Cart->SupplyService: preformHandshake()
note over Cart: now it calculates the price\n for each basket in cart and the total purchase price
Cart->PaymentService: pay(card_number, exp_month, exp_year, card_user_full_name, ccv, card_holder_id)
PaymentService->Cart:transactionID
Cart->SupplyService: dispatch_supply(card_user_full_name, address, city, country, zipcode)
SupplyService->Cart:supply_id
User<-Cart:info dict
User->StoreFacade:info dict
StoreFacade->Service: info dict
Service->Guest: res